
<header>
	<h1>Movie Database</h1>
	<h3>backbone.js / obect-oriented javascript / ajax / json </h3>
</header>

<style>
#my-app-view ol {
	background: #eee;
	display: inline-block; vertical-align:top;
	padding: 10px 15px 10px 30px;
}
#my-app-view li {
	padding: 5px
}
#my-app-view li a {
	text-decoration: none;
}
#my-app-view li.selected a {
	cursor: default;
}
#my-app-view li.selected {
	background-color: white;
}
</style>

<div id="my-app-view">
	<ol id="my-movie-list"></ol>
	<ol id="my-actor-list" style="margin-left:20px"></ol>
</div>

<a href="javascript:void(0)" onclick="toggle_my_source()">
	javascript source
</a>
<pre id="my-javascript-source" style="background:#eee"></pre>
<script>
function toggle_my_source(){
	var $target = $('#my-javascript-source');
	var is_loaded = $target.text().length;
	if(is_loaded){
		$target[ $target.is(':visible') ? 'hide' : 'show' ]()
	} else {
		$target.text(
			$('#my-script-source').html().replace(/\t/g, "    ")
		);
	}
}
</script>

<%= javascript_include_tag "underscore" %>
<%= javascript_include_tag "backbone" %>
<script id="my-script-source">
(function(){
	var movie_view = Backbone.View.extend({
		tagName: 'li',
		className: 'my-movie-view',
		render: function(){
			var movie = this.model.attributes;
			return this.$el.append(
				$('<a href="#"/>').attr({
					id: movie.id
				}).append(
					movie.title
				)
			) // append
		} // render
	}) // movie_view
	var actor_view = Backbone.View.extend({
		tagName: 'li',
		className: 'my-actor-view',
		render: function(){
			var actor = this.model.attributes;
			return this.$el.append(
				$('<a href="#"/>').attr({
					id: actor.id
				}).append(
					actor.name
				)
			) // append
		} // render
	}) // actor_view

	var movie_model = Backbone.Model.extend({})
	var movie_collection = Backbone.Collection.extend({
		model: movie_model
	})
	var actor_model = Backbone.Model.extend({})
	var actor_collection = Backbone.Collection.extend({
		model: actor_model
	})

	var actor_list_view = Backbone.View.extend({
		el: '#my-actor-list',
		events: {
			"click .my-actor-view a": function( e ){
				this.my_movie_list_view.trigger( 'load', e.target.id )
				return false
			}
		}, // events
		initialize: function(models, options){
			this.actors = new actor_collection
			this.listenTo( this.actors, 'reset', function( actors, options ){
				this.$el.empty().append(
					actors.map( function( actor ){
						return ( new actor_view({ model: actor }) ).render()
					})
				)
			}) // listenTo reset

			this.on( "load", function( movie_id ){
				this.actors.fetch({
					reset: true,
					url: "/movie/" + movie_id + "/actor_list",
					//url: "movie" + movie_id + "actorlist",
					success: function( actors, resp, options ){
						actors.movie_id = movie_id
						$('a#' + movie_id, '#my-movie-list').closest('.my-movie-view')
							.siblings().removeClass('selected').end()
							.addClass('selected')
					} // success
				})
			}) // on load_movie
		} // initialize
	}) // actor_list_view

	var movie_list_view = Backbone.View.extend({
		el: '#my-movie-list',
		events: {
			"click .my-movie-view a" : function(e){
				this.my_actor_list_view.trigger( "load", e.target.id )
				return false
			}
		}, // events
		initialize: function(movies, options){
			// pointn to each other
			this.my_actor_list_view = options.my_actor_list_view
			options.my_actor_list_view.my_movie_list_view = this

			this.movies = new movie_collection
			this.listenTo( this.movies, 'reset', function( movies, options ){
				this.$el.empty().append(
					movies.map(function( movie ){
						return ( new movie_view({ model: movie }) ).render()
					})
				)
			}) // listenTo reset
			this.movies.reset( movies )
				
			this.on( "load", function( actor_id ){
				if( this.movies.actor_id != actor_id ){
					this.movies.fetch({
						reset: true,
						url: "/actor/" + actor_id + "/movie_list",
						success: function( movies, resp, options ){
							movies.actor_id = actor_id
						} // success
					})
				}
				// update selection highlight
				$('a#' + actor_id, '#my-actor-list').closest('.my-actor-view')
					.siblings().removeClass('selected').end()
					.addClass('selected')
			}) // on load
		} // initialize
	}) // movie_list_view
	
	var my_movie_list_view = new movie_list_view(
			<%= raw(@movies.to_json) %>, {
				my_actor_list_view: new actor_list_view
			}
	)

	$('#my-movie-list li a').eq(0).click();  // select first one
})()
</script>
