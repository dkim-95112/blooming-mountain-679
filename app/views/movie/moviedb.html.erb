
<header>
	<h1>Movie Database</h1>
	<h3>backbone.js / underscore.js / obect-oriented javascript / ajax / json / ruby rails</h3>
</header>

<style>
#my-app-view ol {
	background:#eee;
	display: inline-block; vertical-align:top;
	padding: 10px 15px 10px 30px;
}
</style>

<div id="my-app-view">
	<ol id="my-movie-list"></ol>
	<ol id="my-actor-list" style="margin-left:20px"></ol>
</div>

<a href="javascript:void(0)" onclick="toggle_my_source()">
	javascript source
</a>
<pre id="my-javascript-source" style="background:#eee"></pre>
<script>
function toggle_my_source(){
	var $target = $('#my-javascript-source');
	var is_loaded = $target.text().length;
	var is_visible = $target.filter(':visible').length;
	if(is_loaded){
		if(is_visible){
			$target.hide();
		} else {
			$target.show();
		}
	} else {
		var $source = $('#my-script-source');
		var html = $source.html().replace(/\t/g, "    ");
		$target.text(html);
	}
}
</script>

<%= javascript_include_tag "underscore" %>
<%= javascript_include_tag "backbone" %>
<script id="my-script-source">
(function(){
	/*
	notes:
	. in-memory/not-in-DOM .wrap() does not work
	. object named 'child'
	. collection-to-view events are more mappable than user-interaction-to-view
	. line count approximately doubled, 50 to 100
	*/
	var movie_anchor_html = '<a href="javascript:void(0)" onclick="handleMovieClick(this)">';
	var movie_view = Backbone.View.extend({
		tagName: 'li',
		className: 'my-movie-view',
		render: function(){
			var movie = this.model.attributes;
			var $html = $(movie_anchor_html).append('<span>' + movie.title + '</span>');
			return this.$el.append($html).attr({id:movie.id});
		}
	})
	var actor_anchor_html = '<a href="javascript:void(0)" onclick="handleActorClick(this)">';
	var actor_view = Backbone.View.extend({
		tagName: 'li',
		className: 'my-actor-view',
		render: function(){
			var actor = this.model.attributes;
			var $html = $(actor_anchor_html).append('<span>' + actor.name + '</span>');
			return this.$el.append($html).attr({id:actor.id});
		}
	})
	var actor_collection = Backbone.Collection.extend({})
	var actor_list_view = Backbone.View.extend({
		el: $('#my-actor-list'),
		initialize: function(models, options){
			this.collection = new actor_collection(models, options);
			this.listenTo(this.collection, 'add', function(model, collection, options){
				this.addOne(model);
			});
			this.listenTo(this.collection, 'reset', function(collection, options){
				this.$el.empty();
			});
		},
		addOne: function(an_actor_model){
			var v = new actor_view({model: an_actor_model});
			this.$el.append(v.render());
		}
	})
	var movie_collection = Backbone.Collection.extend({})
	var movie_list_view = Backbone.View.extend({
		el: $('#my-movie-list'),
		initialize: function(models, options){
			this.collection = new movie_collection(models, options);
			this.listenTo(this.collection, 'add', function(model, collection, options){
				this.addOne(model);
			});
			this.listenTo(this.collection, 'reset', function(collection, options){
				this.$el.empty();
			});
			this.collection.each(this.addOne, this);
		},
		addOne: function(a_movie_model){
			var v = new movie_view({model: a_movie_model});
			this.$el.append(v.render());
		}
	})
	var my_actor_list_view = new actor_list_view;
	var my_movie_list_view = new movie_list_view(<%= raw(@movies.to_json) %>);
	window.handleMovieClick = function(a){
		var $selected_li = $(a).closest('li');
		var movie_id = $selected_li.attr('id');
		my_actor_list_view.collection.reset().fetch({
			$selected_li: $selected_li,
			url: "/movie/" + movie_id + "/actor_list",
			success: function(collection, resp, options){
				options.$selected_li.addClass('selected').find('a').children().unwrap();
				options.$selected_li.siblings().each(function(i, v){
					var $li = $(v).removeClass('selected');
					var is_linked = $li.children('a').length;
					if(!is_linked){
						$li.children().wrap(movie_anchor_html);
					}
				})
			}
		});
		return false;
	}
	window.handleActorClick = function(a){
		var $selected_li = $(a).closest('li');
		var actor_id = $selected_li.attr('id');
		my_movie_list_view.collection.reset().fetch({
			$selected_li: $selected_li,
			url: "/actor/" + actor_id + "/movie_list",
			success: function(collection, resp, options){
				options.$selected_li.addClass('selected').find('a').children().unwrap();
				options.$selected_li.siblings().each(function(i, v){
					var $li = $(v).removeClass('selected');
					var is_linked = $li.children('a').length;
					if(!is_linked){
						$li.children().wrap(actor_anchor_html);
					}
				})
			}
		});
		return false;
	}
	$('#my-movie-list li a').eq(0).click();  // select first one
})()
</script>
