<!DOCTYPE html>
<html>
<head>
	<title>Dave's Portfolio</title>
	<%= favicon_link_tag '/favicon.ico?v=2'%>
	<%= stylesheet_link_tag    "application", :media => "all"%>
	<%= javascript_include_tag "application" %>
	<%= csrf_meta_tags %>

<style type="text/css">
body {
	position: relative;
	min-width: 440px;
	padding-left: 220px;
	font-family : arial , sans-serif;
	color: #333;
}
body, h1, h3 {
	margin: 0;
}
body, div, nav, section, ul, textarea {
	box-sizing: border-box; -moz-box-sizing: border-box;
}
.noselect {
    -webkit-touch-callout: none;
    -webkit-user-select: none;
    -khtml-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
}
nav.main {
	background: url(/assets/clouds2.png) 0 0 no-repeat;
	border-radius: 5px;
}
div.left h1 {
	background: url(/assets/ot-logo.png) 8px 8px no-repeat;
	padding-left: 60px;
	border-bottom: 1px solid #ccc;
}
nav.main > * {
	display: block;
	padding: 5px 10px;
}
nav.main a {
	color: #333;
	text-decoration: none;
	opacity: 0.9;
}
nav.main a:hover {
	opacity: 1;
}
nav.main a.selected {
	opacity: 0.5;
	cursor: default;
}
body > div.left{
	position: fixed;
	left: 0; top: 0; bottom: 0;
	width: 220px; padding: 2px;
	background-color: #7ab6ff;
	z-index: 1;
}
body > div.main {
	position: absolute;
	left: 220px; top: 0; right: 0;
}
section.main {
	position: relative;
	padding: 10px;
}
.vmw-waiting {
	opacity: 0.5;
}
.spinner {
	background: url(/assets/spinnerLarge.gif) no-repeat;
	width: 60px;
	height: 60px;
	position: absolute;
	z-index: 1;
	opacity: 0.5;
}
.myDialog {
	position: absolute;
	z-index: 100;
}
.myDialog > .head {
	background-color: #ccc;
}
.myDialog > .head:hover {
	cursor: pointer;
}
.myDialog > .body {
	background-color: white;
}
.myDialog > .foot {
	background-color: white;
}
.myOverlay {
	position: absolute;
	top: 0;
	left: 0;
	height: 100%;
	width: 100%;
	opacity: 0.3;
	z-index: 10;
	background-color: black;
}
</style>
</head>

<body>
  <div class="left">
    <h1>Dave's Portfolio</h1>
    <small>Last updated May 29, 2015</small>
    <nav class="main">
      <a href="/samples/vmware" title="development screenshots">vmware</a>
      <a href="/samples/etrade">etrade samples</a>
      <a href="/tweets">ip twitter</a>
      <a href="/samples/uicontrols">modal dialog</a>
      <a href="/foo/charting_demo">svg charts</a>
      <a href="/samples/jquery_plugin">jquery plugin</a>
      <a href="/moviedb">backbone moviedb</a>
      <a href="/samples/ots_way">processing 3d canvas</a>
      <a href="/samples/algos">algorithms</a>
      <a href="/webrtc">camera input</a>
    </nav>
  </div>

  <section class="main"></section>
</body>

<script>
$.fn.vload = function ( url ){
	return this.vjax( url , {
		dataType : 'html'
	}).done ( function ( responseHtml ){
		this .html( responseHtml )
	})
}

$.fn.vjax = function ( url , options ){
	var o = this.o = {}
  	$.extend( o , {
		url : url ,
		type : 'get' , // defaulting
		dataType : 'json' , // expecting from server
		context : this , // jquery context for done/always/...
		beforeSend: function(jqXHR) {
			o.context.addClass('vmw-waiting')
			var box = o.context[0].getBoundingClientRect() // relative to viewport
			var viewport = {
				height: $( window ).height(),
				width: $( window ).width()
			}
			var visible = {
				height: Math.min( box.bottom, viewport.height ) - Math.max( box.top, 0 ),
				width: Math.min( box.right, viewport.width ) - Math.max( box.left, 0 )
			}
			if( visible.height > 0 && visible.width > 0 ){
				$( document.documentElement).append(
					$( '<div class="spinner">' ).offset( function( index , coords ){
						var offset = o.context.offset(); // relative to document
						return {
							top: offset.top + (
								box.top >= 0 ? visible.height/2 : o.context.outerHeight() - visible.height/2
							) - 30,
							left: offset.left + (
								box.left >= 0 ? visible.width/2 : o.context.outerWidth() - visible.width/2
							) - 30
						} // return
					})
				) // append
			} // if
		},
		complete : function (){
			$( '> .spinner' , document.documentElement ).remove()
			o.context.removeClass('vmw-waiting')
		}
	})

	// defaulting for post-put data
	options && options.data && /(post|put)/i .test( options .type ) &&
		$ .extend ( o , {
			contentType : 'application/json' , // sending to server
			processData : false
		})

	return $.ajax( $.extend ( o , options ) )
} // vjax

String.prototype.f = function() {
	var a = arguments
	return this.replace(/{(\d+)}/g, function(m, n) {
		return a[n]
	})
} // String.prototype.f

function errorDialog(options) {
	var o = {}
	if (isContentHtml(options)) { // allow optionsHtml in first parameter
		o.contentHtml = options
		options = null
	}
	$.extend(o, {
		title: 'Error',
		style: 'x'
	}, options)
	return alertDialog(o)
} // errorDialog

function isContentHtml(v) {
    return typeof v === 'string' || v instanceof $
} // isContentHtml

function alertDialog(options) { // now a global container
    var o = this.o = {}
    if( isContentHtml(options)){ // allow contentHtml in first parameter
		o.contentHtml = options
		options = null
    }
    $.extend(o, {
		title: 'Confirm',
		style: "info", // i-info, ?-confirm, !-warn, x-error
		buttons: [{
			title: 'Ok',
			callback: function(e) {
				e.preventDefault()
			} // callback
		}] // buttons
    }, options)
    return o.$dialog = $('<div/>').modalDialog(o).css({
		'min-width': 322, // like min-width for table since it auto expands
		'max-width': 496
    }).append(
		$('<div class="head"/>').css({
			'line-height': '1.5em',
			'background-color': '#dedede',
			'font-weight': 'bold',
			'padding-left': '1em'
		}).append(o.title),
		$('<div class="body"/>').css({
			padding: '1em 1em 1em 60px', // room for background icon
			background: 'white url({0}) no-repeat 15px 15px'.f(
				[
					"images/help32x.png",
					"images/warning32x.png",
					"assets/error32x.png"
				][
					o.style.length === 1 ? (
						'?!x'.indexOf(o.style)
					) : (
						$.inArray(
							o.style, ['confirm', 'warn', 'err']
						) // inArray
					)
				] || "assets/info32x.png"
			) // f
		}).append(o.contentHtml),
		$('<div class="foot"/>').css({
			'text-align': 'center',
			height: 42,
			'background-color': 'white'
		}).append(
			$.map(o.buttons, function(v) {
				return $('<button/>').append(v.title).one({
					click: function(e) {
						e.preventDefault()
						v.callback && v.callback.call(this, e)
						o.$dialog.triggerHandler('close')
					} // click
				}) // one
			}) // map
		) // append
    ).triggerHandler('center', o)
} // alertDialog

$.fn.modalDialog = function(options) {
	var o = this.o = {}
	$.extend(o, {
		$myDialog: this,
		$docBody: $(document.body),
		$myOverlay: $('<div class="myOverlay"/>'),
		dragTimeout: 100
	}, options) // extend

	function center(options) {
		if (options.eMouseClick) { // got mouse click ?
			// positionn first button under cursor
			o.$myButton = $('button', o.$myDialog)
			var buttonOffset = o.$myButton.offset()
			var dialogOffset = o.$myDialog.offset()
			var buttonPosition = {
				top: buttonOffset.top - dialogOffset.top,
				left: buttonOffset.left - dialogOffset.left
			}
			var button = {
				width: o.$myButton.outerWidth(),
				height: o.$myButton.outerHeight()
			}
			return {
				top: Math.max(
					document.body.scrollTop, // keepn top visible
					o.eMouseClick.pageY - buttonPosition.top - button.height + 1
				),
				left: Math.max(
					document.body.scrollLeft, // keepn left visible
					o.eMouseClick.pageX - buttonPosition.left - button.width / 2
				)
			}
		} // if
		// otherwise center dialog in page
		var viewport = {
			height: $( window ).height(),
			width: $( window ).width()
		}
		var dialog = {
			height: o.$myDialog.outerHeight(),
			width: o.$myDialog.outerWidth()
		}
		return {
			top: document.body.scrollTop + // keepn top visible
				Math.max(0, viewport.height / 2 - dialog.height / 2),
			left: document.body.scrollLeft + // keepn left visible
				Math.max(0, viewport.width / 2 - dialog.width / 2)
		}
	} // center

	return o.$myDialog.addClass(
		'myDialog'
	).appendTo(
		o.$docBody.addClass('noselect').on({
			'keyup': function(e) {
				if (e.keyCode === 27) { // 'escape' key ?
					o.$myDialog.triggerHandler(
						'close'
					)
				} // if
			} // keyup
		}).append(
			o.$myOverlay
		)
	).end().one({
		close: function(e) {
			o.$myDialog.triggerHandler('beforeClose')
			o.$myOverlay.remove()
			o.$docBody.removeClass('noselect')
			return o.$myDialog.remove()
		}
	}).on('mousedown', '.head', function(e) { // starting drag
		var pageX0 = e.pageX,
			pageY0 = e.pageY,
			offset0 = o.$myDialog.offset();
		o.dragThrot = 1
		o.$docBody.on({
			'mousemove.dragging': function(e) {
				if( o.dragThrot ){ 
					o.$myDialog.offset({
						top: offset0.top + (e.pageY - pageY0),
						left: offset0.left + (e.pageX - pageX0)
					})
					o.dragThrot = 0;
					o.dragTimeoutId = setTimeout( function(){ o.dragThrot ++ } , o.dragTimeout );
				}
			}, // mousemove
			'mouseup.dragging': function(e) {
				clearTimeout( o.dragTimeoutId )
				o.dragTimeoutId = 0
				o.$docBody.off('.dragging')
			} // mouseup
		}) // on
	}).on({
		center: function(e, options) {
			return o.$myDialog.offset(
				center(options)
			) // offset
		} // center
	}) // on
} // modalDialog
function getCookie(cname) {
	var name = cname + "=";
	var ca = document.cookie.split(';');
	for(var i=0; i<ca.length; i++) {
		var c = ca[i];
		while (c.charAt(0)==' ') c = c.substring(1);
		if (c.indexOf(name) == 0) return c.substring(name.length,c.length);
	}
	return "";
}

var jqxhrNav = 0;
$( 'nav.main').on( 'click' , '> a' , function ( e ){
	var $a = $( this);
    if ( $a.hasClass( 'selected' ) ){
		// already selected , doing nothing
    } else {
		if( jqxhrNav ){
			jqxhrNav.abort() // cancel pending
		} else {
			$a.siblings( 'a' ).removeClass( 'selected')
			$('section.main').triggerHandler( 'myunload' ) // unload previous
		}
		jqxhrNav = $('section.main').vload(
			$a.attr( 'href' )
		).done( function (){
			document.cookie= "myHref=" + $a.attr('href')
			$a.addClass( 'selected')
			jqxhrNav = 0
		})
    }
	return false // otherwise href gets followed
} // click
			       )
var myHref, $prevNav;
if( myHref = getCookie("myHref")){
	$prevNav = $("a[href='" + myHref + "']" , 'nav.main' );
}
( $prevNav && $prevNav.length ? $prevNav : $("a[ href $= 'uicontrols' ]", 'nav.main' ) ).click()

</script>

</html>
